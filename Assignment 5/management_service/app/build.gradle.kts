/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id("org.springframework.boot") version "3.2.1"
    id("io.spring.dependency-management") version "1.1.4"
    application
}

apply(plugin = "io.spring.dependency-management")

group = "com.escooter_microservices"
version = "0.0.1-SNAPSHOT"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    testImplementation(libs.junit)

    implementation(libs.guava)

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb")
    implementation("io.github.resilience4j:resilience4j-spring-boot3:2.2.0")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    /*toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }*/
    sourceCompatibility = JavaVersion.VERSION_17
}

application {
    // Define the main class for the application.
    mainClass.set("management_service.App")
}
